{
    "version": "https://jsonfeed.org/version/1",
    "title": "Natdanai Puthom",
    "description": "",
    "home_page_url": "https://natdanaiputhom.github.io",
    "feed_url": "https://natdanaiputhom.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Natdanai Puthom"
    },
    "items": [
        {
            "id": "https://natdanaiputhom.github.io/the-lost-arena-tales-of-timeless-adventure.html",
            "url": "https://natdanaiputhom.github.io/the-lost-arena-tales-of-timeless-adventure.html",
            "title": "The Lost Arena: Tales of Timeless Adventure (prototype)",
            "summary": "(coming soon)",
            "content_html": "<p>(coming soon)</p>",
            "image": "https://natdanaiputhom.github.io/media/posts/16/comingsoon.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Personal Project"
            ],
            "date_published": "2024-04-10T03:49:09+02:00",
            "date_modified": "2024-04-10T03:54:58+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/project-8.html",
            "url": "https://natdanaiputhom.github.io/project-8.html",
            "title": "Project 8",
            "summary": "(coming soon)",
            "content_html": "<p>(coming soon)</p>",
            "image": "https://natdanaiputhom.github.io/media/posts/15/comingsoon.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Group Project"
            ],
            "date_published": "2024-04-10T01:22:19+02:00",
            "date_modified": "2024-04-10T01:22:27+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/inverse-kinematic.html",
            "url": "https://natdanaiputhom.github.io/inverse-kinematic.html",
            "title": "Inverse Kinematic",
            "summary": "(Inprogress 08/04/2024) test",
            "content_html": "<p>(Inprogress 08/04/2024)</p>\n<p>test</p>",
            "image": "https://natdanaiputhom.github.io/media/posts/14/comingsoon.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Personal Project"
            ],
            "date_published": "2024-04-10T00:07:31+02:00",
            "date_modified": "2024-04-10T00:07:42+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/thread-pool.html",
            "url": "https://natdanaiputhom.github.io/thread-pool.html",
            "title": "Thread Pool",
            "summary": "Initially, my pathfinding algorithm led to performance loss when multiple enemies on a vast map attempted to calculate paths simultaneously,&hellip;",
            "content_html": "<p>Initially, my pathfinding algorithm led to performance loss when multiple enemies on a vast map attempted to calculate paths simultaneously, sometimes every frame. To enhance this, I devised a solution where, regardless of their current state, enemies could persist in their activities while awaiting the completion of path calculations. This transition ensured that upon receiving their calculated paths, they could effortlessly shift to the next state, utilizing the paths without hindering much of performance. That solution was thread pool, by making use of modern CPU, which usually come with multi-cores and threads.</p>\n<p>I encountered a subsequent challenge where certain tasks needed to be executed as swiftly as possible, which current thread pool class could not meet the requirement. To address this, I designed a separate priority queue for such tasks, assigning them a priority range from 0.0 to 1.0, with higher numbers indicating higher priority. This ensured that tasks in the priority queue were executed before those in the normal queue.</p>\n<p>After a code review, my classmates and I engaged in a discussion concerning the potential issue of certain tasks never begin executed if higher priority tasks were continuously added. </p>\n<pre>\"What if some tasks remain unexecuted due to the constant influx of higher priority tasks?\"</pre>\n<p>The solution I had in mind was some sort of timer for every tasks in queue. Since this 'potential issue' had not yet occurred, I decided it wasn't necessary to allocate time to address it immediately. Instead, I documented it, along with other potential issues and improvements, for future consideration.</p>\n<figure class=\"post__image\"> <a href=\"https://natdanaiputhom.github.io/threadpool2.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/13/threadpool2.png\" alt=\"\" width=\"1390\" height=\"518\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool2-xs.png 384w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool2-sm.png 600w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool2-md.png 768w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool2-lg.png 1200w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool2-xl.png 1600w\"></figure></a></p>\n<figure class=\"post__image\"><a href=\"https://natdanaiputhom.github.io/threadpool3.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/13/threadpool3.png\" alt=\"\" width=\"1471\" height=\"566\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool3-xs.png 384w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool3-sm.png 600w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool3-md.png 768w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool3-lg.png 1200w ,https://natdanaiputhom.github.io/media/posts/13/responsive/threadpool3-xl.png 1600w\"></figure></a></p>",
            "image": "https://natdanaiputhom.github.io/media/posts/13/thread2-2.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Personal Project"
            ],
            "date_published": "2024-04-08T18:47:26+02:00",
            "date_modified": "2024-04-10T04:37:28+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/the-laboratory.html",
            "url": "https://natdanaiputhom.github.io/the-laboratory.html",
            "title": "Streamer Attacked by Aliens Live On Stream!",
            "summary": "(Inprogress 08/04/2024) Details: My contributions: Player controls and movements UI System",
            "content_html": "<p>(Inprogress 08/04/2024)</p>\n<p><strong>Details:</strong></p>\n<ul>\n<li>A 3D game inspired by <strong>Call of Duty: World at War Zombies. Nach der untoten.</strong></li>\n<li>14-weeks development (20 hours per week)</li>\n<li>Game made fully using our group custom engine <strong>TempEngine.</strong></li>\n</ul>\n<p><strong>My contributions:</strong></p>\n<ul>\n<li>Player controls and movements</li>\n<li>UI System</li>\n</ul>",
            "image": "https://natdanaiputhom.github.io/media/posts/12/comingsoon.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Group Project"
            ],
            "date_published": "2024-04-08T18:40:42+02:00",
            "date_modified": "2024-04-10T03:41:49+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/kurts-night-shift.html",
            "url": "https://natdanaiputhom.github.io/kurts-night-shift.html",
            "title": "Kurt&#x27;s Night Shift",
            "summary": "The Game Assembly Discord announced a 48-hour game jam hosted by Climax Studio. At that time, my understanding of a&hellip;",
            "content_html": "<p>The Game Assembly Discord announced a 48-hour game jam hosted by Climax Studio. At that time, my understanding of a 'game jam' was limited to the basic concept of game creation. Eager to participate, I joined forces with fellow students to form a team called Tiny Green Ants and we registered for the Climax Game Jam. This was my first game jam experience and it turned out to be incredibly enjoyable! It was so engaging that I found myself on the brink of addiction, barely sleeping throughout those 48 hours. Despite the exhilaration, I've decided that in future game jams, I will make sure to get proper rest. I am proud to have secured 3rd place in this friendly game jam, a remarkable achievement considering our unfair advantages of having 10 members, in contrast to the smaller sizes of other teams!</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/11/tiny.png\" alt=\"\" width=\"86\" height=\"64\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/11/responsive/tiny-xs.png 384w ,https://natdanaiputhom.github.io/media/posts/11/responsive/tiny-sm.png 600w ,https://natdanaiputhom.github.io/media/posts/11/responsive/tiny-md.png 768w ,https://natdanaiputhom.github.io/media/posts/11/responsive/tiny-lg.png 1200w ,https://natdanaiputhom.github.io/media/posts/11/responsive/tiny-xl.png 1600w\"></figure>\n<p>During this game jam, I set up a Discord server, Perforce mainline, the Unity project, along with creating tutorial videos to help my teammates set up their workspaces. Beyond these preparatory tasks, my primary focus was on developing character movements and controls, including the flashlight below.</p>\n<p> </p>\n<p><strong>Character movements</strong></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/11/vlc_0qgOip2WCj.gif\" alt=\"\" width=\"1597\" height=\"652\"></figure>\n<p>I aimed for the character to rotate along the y-axis withing a 0 to 180-degree range, based on the mouse's position on the x-axis. Due to the time constraints preventing further investigation into the spin-walking issue, I opted to calculate the distance between the mouse position and the character, introducing a minimum threshold for how close the mouse can be to the character. If the distance falls below this threshold, the character won't rotate. The downside of this method is that it causes the character to snap quickly in certain mouse positions. However, this was deemed bearable compared to the constant spin-walking players would experience, as revealed through a quick playtest by my teammates.</p>\n<p> </p>\n<p><strong>Dialogue System</strong></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/11/vlc_iKacL3qsjY.gif\" alt=\"\" width=\"1073\" height=\"629\"></figure>\n<p>Among other features, I implemented were the 3D sprite pop-up utilizing 3D planes with applied textures that include transparency. Additionally, I incorporated dialogue text system which also triggers voice lines recorded by our game artist.</p>\n<p><em>You can play Kurt's Night Shift here at <a href=\"https://despacitos.itch.io/kurts-night-shift\">https://despacitos.itch.io/kurts-night-shift</a> </em></p>",
            "image": "https://natdanaiputhom.github.io/media/posts/11/ezgif-3-71cf0a8b42.gif",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Game Jam"
            ],
            "date_published": "2024-04-08T18:20:08+02:00",
            "date_modified": "2024-04-09T23:51:05+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/hamster-16.html",
            "url": "https://natdanaiputhom.github.io/hamster-16.html",
            "title": "Hamster 16",
            "summary": "The Game Assembly (TGA) hosted 48-hours in-house game jam, and I couldn't resist how fun it sounded! The theme was&hellip;",
            "content_html": "<figure class=\"post__image post__image--right\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/10/Screenshot-2024-04-09-at-18-42-13-Edit-project.png\" alt=\"\" width=\"198\" height=\"157\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/10/responsive/Screenshot-2024-04-09-at-18-42-13-Edit-project-xs.png 384w ,https://natdanaiputhom.github.io/media/posts/10/responsive/Screenshot-2024-04-09-at-18-42-13-Edit-project-sm.png 600w ,https://natdanaiputhom.github.io/media/posts/10/responsive/Screenshot-2024-04-09-at-18-42-13-Edit-project-md.png 768w ,https://natdanaiputhom.github.io/media/posts/10/responsive/Screenshot-2024-04-09-at-18-42-13-Edit-project-lg.png 1200w ,https://natdanaiputhom.github.io/media/posts/10/responsive/Screenshot-2024-04-09-at-18-42-13-Edit-project-xl.png 1600w\"></figure>\n<p>The Game Assembly (TGA) hosted 48-hours in-house game jam, and I couldn't resist how fun it sounded! The theme was \"Isolation\", but if you've tried the game, you'll notice ours is quite the opposite. The hamsters are isolated, yet they are not! We had a really fun experience playing Hamster 16 with other TGA students. Initially, players started off by attacking each other and harbouring wicked thoughts, but they soon begin to cooperated, trying to beat the game! One team managed to clear the game after more than half an hour and witnessed the ending cinematics! The ironic quote of the day was, \"One last game!\".</p>\n<p>Due to some unknown issues the WebGL version could not display some visual effects and ending cinematic properly. Unfortunately, since the time was short, we did not had extra time to allocate to investigate and fix this issues. If you're interested you can try to download the game and play with your friends or colleagues!</p>\n<p><em>Recommended of 2 - 4 players using hand controllers and loud stereo speakers! You can play Hamster 16 on the website or download the game here at</em> <a href=\"https://carrydev.itch.io/hamster16\">https://carrydev.itch.io/hamster16</a> </p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://natdanaiputhom.github.io/media/posts/10/PXL_20230526_151046257-3.jpg\" alt=\"\" width=\"262\" height=\"197\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/10/responsive/PXL_20230526_151046257-3-xs.jpg 384w ,https://natdanaiputhom.github.io/media/posts/10/responsive/PXL_20230526_151046257-3-sm.jpg 600w ,https://natdanaiputhom.github.io/media/posts/10/responsive/PXL_20230526_151046257-3-md.jpg 768w ,https://natdanaiputhom.github.io/media/posts/10/responsive/PXL_20230526_151046257-3-lg.jpg 1200w ,https://natdanaiputhom.github.io/media/posts/10/responsive/PXL_20230526_151046257-3-xl.jpg 1600w\">\n<figcaption >I had laser-treatment in the morning which made my face unable to smile properly in the picture</figcaption>\n</figure>\n<p> </p>",
            "image": "https://natdanaiputhom.github.io/media/posts/10/ezgif-7-6f8b3425a8.gif",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Game Jam"
            ],
            "date_published": "2024-04-08T18:18:40+02:00",
            "date_modified": "2024-04-10T00:41:17+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/streamer-attacked-by-aliens-live-on-stream.html",
            "url": "https://natdanaiputhom.github.io/streamer-attacked-by-aliens-live-on-stream.html",
            "title": "Spite: String of Fate",
            "summary": "(Inprogress 08/04/2024) Details: My contributions: Player controls and movements Player attacks and abilities Navmesh and pathfinder",
            "content_html": "<p>(Inprogress 08/04/2024)</p>\n<p><strong>Details:</strong></p>\n<ul>\n<li>A 3D game inspired by <strong>Diablo 3</strong>.</li>\n<li>Game project 6.</li>\n<li>10-weeks development (20 hours per week)</li>\n<li>Game made with our group custom engine (TempEngine) with Unity as Editor.</li>\n</ul>\n<p><strong>My contributions:</strong></p>\n<ul>\n<li>Player controls and movements</li>\n<li>Player attacks and abilities</li>\n<li>Navmesh and pathfinder</li>\n</ul>",
            "image": "https://natdanaiputhom.github.io/media/posts/9/comingsoon.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Group Project"
            ],
            "date_published": "2024-04-08T17:59:58+02:00",
            "date_modified": "2024-04-10T03:38:41+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/spite-string-of-fate.html",
            "url": "https://natdanaiputhom.github.io/spite-string-of-fate.html",
            "title": "The Laboratory",
            "summary": "(Inprogress 08/04/2024) Details: My contributions: Player character controls Camera Helping with building our custom engine from scratch",
            "content_html": "<p>(Inprogress 08/04/2024)</p>\n<p><strong>Details:</strong></p>\n<ul>\n<li>A 3D game inspired by <strong>The Room</strong>.</li>\n<li>Game project 5.</li>\n<li>4-weeks development (20 hours per week)</li>\n<li>Game made with our group custom engine (TempEngine) and using Unity as Editor</li>\n</ul>\n<p><strong>My contributions:</strong></p>\n<ul>\n<li>Player character controls</li>\n<li>Camera</li>\n<li>Helping with building our custom engine from scratch</li>\n</ul>",
            "image": "https://natdanaiputhom.github.io/media/posts/8/comingsoon.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Group Project"
            ],
            "date_published": "2024-04-08T17:58:31+02:00",
            "date_modified": "2024-04-10T03:35:24+02:00"
        },
        {
            "id": "https://natdanaiputhom.github.io/inverse-kinematics.html",
            "url": "https://natdanaiputhom.github.io/inverse-kinematics.html",
            "title": "SimpleEngine",
            "summary": "Inspired by my experiences with 'SimpleJson' which, ironically, was anything but simple, I set out to craft my own engine,&hellip;",
            "content_html": "<p>Inspired by my experiences with 'SimpleJson' which, ironically, was anything but simple, I set out to craft my own engine, humorously named SimpleEngine. This effort mocked the misleading \"simplicity\" promised by such tools. Olle, whom I had previously worked on projects like <a href=\"https://natdanaiputhom.github.io/test.html\" target=\"_blank\" rel=\"noopener noreferrer\">Spoopy Sprint </a>and <a href=\"https://natdanaiputhom.github.io/spelprojekt-4.html\" target=\"_blank\" rel=\"noopener noreferrer\">Stella's Quest </a>with, harbours a distinct aversion to the use of singletons and global variables, a stance that, while typically aligning with good practice, I playfully chose to ignore for this engine. Embracing the chaos, I decided to implement everything in SimpleEngine using global pointers, a decision ripe with potential for humorous disaster. What indeed could go wrong?</p>\n<p>SimpleEngine, initially for fun, became my gateway to learn graphics programming with DirectX11. While the PBR light and reflections need improvement, I plan to address them later.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/7/ezgif-2-d718a87e32.gif\" alt=\"\" width=\"1269\" height=\"487\"></figure>\n<p>My fascination with 'procedural animation' began after watching a video about spider on YouTube, leading me to explore Inverse Kinematics (IK). Eager to implement this in my project, I first had to tackle the basics: loading models and animations into the engine. Despite my initial lack of knowledge, I successfully integrated models, skeletons, and animations using FBXSDK. However, the animations didn't play correctly. After days of searching for the culprit, I discovered the issue was in the shader I had mistakenly used the '+' operator instead of '*'. </p>\n<figure class=\"post__image\"><img  src=\"https://natdanaiputhom.github.io/media/posts/7/SimpleEngine_Debug_8kfNkMub3u.gif\" alt=\"\" width=\"262\" height=\"213\"></figure> <figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/7/shaderanim.png\" alt=\"\" width=\"302\" height=\"161\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/7/responsive/shaderanim-xs.png 384w ,https://natdanaiputhom.github.io/media/posts/7/responsive/shaderanim-sm.png 600w ,https://natdanaiputhom.github.io/media/posts/7/responsive/shaderanim-md.png 768w ,https://natdanaiputhom.github.io/media/posts/7/responsive/shaderanim-lg.png 1200w ,https://natdanaiputhom.github.io/media/posts/7/responsive/shaderanim-xl.png 1600w\"></figure>\n<p>Utilizing a model previously created in <a href=\"https://natdanaiputhom.github.io/spelprojekt-3.html\" target=\"_blank\" rel=\"noopener noreferrer\">Abalabos</a>,I incorporated linear interpolation to smooth transitions between different animations for testing purposes. If you're interested in my IK inverse kinematic journey, you can read more about it here, <a href=\"https://natdanaiputhom.github.io/inverse-kinematic.html\" target=\"_blank\" rel=\"noopener noreferrer\">Inverse Kinematic</a>. </p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://natdanaiputhom.github.io/media/posts/7/SimpleEngine_Debug_ocAc1gAiZ8.gif\" alt=\"\" width=\"1282\" height=\"752\">\n<figcaption >Model created by Oliver Benedetti</figcaption>\n</figure>\n<p>While implementing and testing animations, I encountered significant performance hit when updating multiple instances of the same animation type. This led me to devise several solutions.</p>\n<ol>\n<li>For models undergoing the same animation without variation, I found that updating the animation once and then applying the new pose to all models sharing that animation conservatively saved resources.</li>\n<li>For models with differing animations, leveraging a <a href=\"https://natdanaiputhom.github.io/thread-pool.html\" target=\"_blank\" rel=\"noopener noreferrer\">Thread Pool</a> to update animations in parallel before proceeding significantly enhanced performance.</li>\n</ol>\n<p>The impact of these optimizations was remarkable, yielding a ~1 milliseconds improvement per frame for 200 animations on an Intel Core i5 9400f, with even more substantial gains for models using identical animations.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://natdanaiputhom.github.io/media/posts/7/SimpleEngine_Debug_2qlZNuFj0O.gif\" alt=\"\" width=\"1282\" height=\"752\"></figure>\n<p>This code iterates through each model with a unique animation variant, assigning tasks to the thread pool and storing the outcomes in a container. The 'Update()' function only completes after all 'std::future' objects return and retrieve a valid result, indicating that every model has been successfully updated.</p>\n<figure class=\"post__image\" ><a href=\"https://natdanaiputhom.github.io/animupdate.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img loading=\"lazy\" src=\"https://natdanaiputhom.github.io/media/posts/7/animupdate.png\" alt=\"\" width=\"1216\" height=\"214\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/7/responsive/animupdate-xs.png 384w ,https://natdanaiputhom.github.io/media/posts/7/responsive/animupdate-sm.png 600w ,https://natdanaiputhom.github.io/media/posts/7/responsive/animupdate-md.png 768w ,https://natdanaiputhom.github.io/media/posts/7/responsive/animupdate-lg.png 1200w ,https://natdanaiputhom.github.io/media/posts/7/responsive/animupdate-xl.png 1600w\"></a>\n<figcaption >Solution 2</figcaption>\n</figure>\n<p>Over time, SimpleEngine has evolved, increasingly focusing on implementing new features primarily for testing. This includes the integration of navigation meshes and pathfinding algorithms, as utilized in <a href=\"https://natdanaiputhom.github.io/streamer-attacked-by-aliens-live-on-stream.html\" target=\"_blank\" rel=\"noopener noreferrer\">Spite: String of Fate</a>, and the exploration of Entity Component Systems (ECS), a concept I delved into due to our team's use of FLECS for the \"Spite: String of Fate\" project. You can learn more about my ECS implementation here, <a href=\"https://natdanaiputhom.github.io/entity-component-system.html\" target=\"_blank\" rel=\"noopener noreferrer\">Entity Component Systems</a>.</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://natdanaiputhom.github.io/media/posts/7/navmesh.png\" alt=\"\" width=\"1271\" height=\"741\" sizes=\"(min-width: 37.5em) 1600px, 80vw\" srcset=\"https://natdanaiputhom.github.io/media/posts/7/responsive/navmesh-xs.png 384w ,https://natdanaiputhom.github.io/media/posts/7/responsive/navmesh-sm.png 600w ,https://natdanaiputhom.github.io/media/posts/7/responsive/navmesh-md.png 768w ,https://natdanaiputhom.github.io/media/posts/7/responsive/navmesh-lg.png 1200w ,https://natdanaiputhom.github.io/media/posts/7/responsive/navmesh-xl.png 1600w\">\n<figcaption >Grid, Navmesh and Pathfinder with Raycast test</figcaption>\n</figure>\n<p>I intend to persistently enhance SimpleEngine throughout my game development journey, curious to discover where this path will take me. So far, developing SimpleEngine has been a fulfilling experience. For the upcoming summer, I have outlined several key tasks I aim to complete, integrate, and implement within the engine, which include</p>\n<ul>\n<li>ECS</li>\n<li>Editor</li>\n<li>IK</li>\n<li>Graphics (colour blend and model instancing) </li>\n<li>Node Scripting (this is implemented and will be done by Emil Olofsson you can read more about his amazing work at <a href=\"https://broremilolofsson.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">https://broremilolofsson.github.io</a> )</li>\n</ul>\n<p><em>If you're interested in source code for SimpleEngine you can find them here at <a href=\"https://github.com/NatdanaiPuthom/SimpleEngine\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/NatdanaiPuthom/SimpleEngine</a> </em></p>",
            "image": "https://natdanaiputhom.github.io/media/posts/7/progart.png",
            "author": {
                "name": "Natdanai Puthom"
            },
            "tags": [
                   "Personal Project"
            ],
            "date_published": "2024-04-08T15:35:40+02:00",
            "date_modified": "2024-04-10T07:32:55+02:00"
        }
    ]
}
